{"version":3,"sources":["meteor://ðŸ’»app/imports/api/apixu.js","meteor://ðŸ’»app/imports/api/darkSky.js","meteor://ðŸ’»app/imports/api/data.js","meteor://ðŸ’»app/imports/api/weatherStation.js","meteor://ðŸ’»app/server/main.js"],"names":["module","export","apixu","moment","watch","require","default","v","callback","startDate","config","location","formatedDate","format","Meteor","call","timeout","err","apixuData","apixuDataCurrent","apixuParsedData","apixuParsedCurrentData","data","forecast","forecastday","hour","forEach","push","temperature","temp_c","humidity","date","Date","time_epoch","getTime","current","last_updated_epoch","sort","a","b","historic","darkSky","currentTime","Math","round","darkSkyData","darkSkyDataLast","darkSkyParsedData","darkSkyParsedCurrentData","hourly","time","currently","postDataLoader","HTTP","weatherStation","callService","type","url","options","Promise","resolve","reject","error","result","getDiffVector","weatherStationData","dataVect","iTemp","iHumidity","diffTemp","diffHumidity","diff","record","sumTemperature","sumHumidity","nTemperature","nHumidity","actualTime","i","length","delta","abs","props","onData","env","match","params","d","setHours","midnight","isServer","methods","getPage","then","catch","Error","message","elasticsearchUrl","elasticsearchSearchQuery","brokerUrl","fiwareServicePath","fiwareService","weatherStationDataLast","headers","weatherStationDataCurrent","WSParsedData","WSCurrentData","hits","hit","_source","attribute","value","TP","HD","lastDate","startup"],"mappings":"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","file":"/app.js","sourcesContent":["export {apixu}\nimport moment from 'moment'\nfunction apixu(callback,startDate,config){\n  var location = config && config.location?config.location:\"38.67,-9.2\";\n  var formatedDate = moment(startDate).format('YYYY-MM-DD')\n  Meteor.call('getPage','http://api.apixu.com/v1/history.json?key=05d72599bed946d8983155015170512&q='+location+'&dt='+formatedDate,{timeout:15000},function(err,apixuData){\n    Meteor.call('getPage','http://api.apixu.com/v1/current.json?key=05d72599bed946d8983155015170512&q='+location,{timeout:15000},function(err,apixuDataCurrent){\n      var apixuParsedData = [];\n      var apixuParsedCurrentData = {};\n      if(apixuData && apixuData.data && apixuData.data.forecast && apixuData.data.forecast.forecastday &&  apixuData.data.forecast.forecastday[0] && apixuData.data.forecast.forecastday[0].hour){\n\n        apixuData.data.forecast.forecastday[0].hour.forEach(hour=>{\n          apixuParsedData.push({\n            temperature:hour.temp_c,\n            humidity: hour.humidity,\n            date:(new Date(hour.time_epoch*1000)).getTime()\n          })\n        })\n\n\n      }\n      if(apixuDataCurrent && apixuDataCurrent.data && apixuDataCurrent.data.current){\n        apixuParsedCurrentData = {\n          date: (new Date(apixuDataCurrent.data.current.last_updated_epoch*1000)).getTime(),\n          temperature: apixuDataCurrent.data.current.temp_c,\n          humidity: apixuDataCurrent.data.current.humidity\n        }\n      }\n      apixuParsedData.sort(function(a,b) {return (a.date > b.date) ? 1 : ((b.date > a.date) ? -1 : 0);} );\n      callback({\n        historic: apixuParsedData,\n        current: apixuParsedCurrentData\n      },startDate);\n    });\n  });\n}\n","export {darkSky}\n\nfunction darkSky(callback,startDate,config){\n\n  var location = config && config.location ?config.location:\"38.67,-9.2\";\n  var currentTime = Math.round((new Date(startDate)).getTime()/1000)\n  Meteor.call('getPage','https://api.darksky.net/forecast/7902d68f0b5648cce7b9b12139451974/'+location+','+currentTime+'?units=si',{timeout:15000},function(err,darkSkyData){\n    Meteor.call('getPage','https://api.darksky.net/forecast/7902d68f0b5648cce7b9b12139451974/'+location+'?units=si',{timeout:15000},function(err,darkSkyDataLast){\n\n    //Meteor.call('getPage','http://www.sapo.pt',function(err,darkSkyData){\n      var darkSkyParsedData = [];\n      var darkSkyParsedCurrentData = {}\n      if(darkSkyData && darkSkyData.data && darkSkyData.data.hourly && darkSkyData.data.hourly.data){\n        darkSkyData.data.hourly.data.forEach(data=>{\n          darkSkyParsedData.push({\n            temperature:data.temperature,\n            humidity: data.humidity*100,\n            date:(new Date(data.time*1000)).getTime()\n          })\n        })\n      }\n      if(darkSkyDataLast &&  darkSkyDataLast.data && darkSkyDataLast.data.currently){\n        darkSkyParsedCurrentData = {\n          date: (new Date(darkSkyDataLast.data.currently.time*1000)).getTime(),\n          temperature: darkSkyDataLast.data.currently.temperature,\n          humidity: darkSkyDataLast.data.currently.humidity*100\n        }\n      }\n      darkSkyParsedData.sort(function(a,b) {return (a.date > b.date) ? 1 : ((b.date > a.date) ? -1 : 0);} );\n      callback({\n        historic: darkSkyParsedData,\n        current: darkSkyParsedCurrentData\n      },startDate);\n    });\n  });\n}\n","import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport {weatherStation} from './weatherStation.js'\nimport {apixu} from './apixu.js'\nimport {darkSky} from './darkSky.js'\nimport moment from 'moment'\nexport {postDataLoader}\n\nconst callService = (type, url, options) => new Promise((resolve, reject) => {\n  HTTP.call(type, url, options, (error, result) => {\n    if (error) {\n      reject(error);\n    } else {\n      resolve(result);\n    }\n  });\n});\n\nfunction getDiffVector(weatherStationData,dataVect){\n  var iTemp = 0;\n  var iHumidity = 0;\n  var diffTemp = [];\n  var diffHumidity = [];\n  var diff = []\n  if(dataVect.historic){\n    dataVect.historic.forEach(record=>{\n      var sumTemperature = null;\n      var sumHumidity = null;\n      var nTemperature = 0;\n      var nHumidity = 0;\n      var actualTime = (new Date()).getTime();\n      if(record.date<actualTime)\n      {\n        if(weatherStationData.historic){\n          for(var i=0;i<weatherStationData.historic.length;i++)\n          {\n            var delta = record.date-weatherStationData.historic[i].date\n\n            if(delta<3600000){\n              if(weatherStationData.historic[i].temperature)\n              {\n                sumTemperature = sumTemperature + weatherStationData.historic[i].temperature\n                nTemperature = nTemperature + 1;\n              }\n              if(weatherStationData.historic[i].humidity)\n              {\n                sumHumidity = sumHumidity + weatherStationData.historic[i].humidity\n                nHumidity = nHumidity + 1;\n              }\n            }else if(delta <0){\n              break;\n            }\n          }\n          if(sumTemperature && sumHumidity)\n          {\n\n            diff.push({\n              date: record.date,\n              temperature: Math.abs(sumTemperature/nTemperature - record.temperature),\n              humidity: Math.abs(sumHumidity/nHumidity - record.humidity)\n            })\n\n          }\n        }\n      }\n\n    })\n  }\n  return diff\n}\n\nfunction postDataLoader(props, onData,env) {\n  var config = env.config?env.config:{}\n  var date = new Date(props.match.params.date).getTime();\n  var d = new Date();\n  d.setHours(0,0,0,0);\n  var midnight = d.getTime();\n  var startDate = date?date:midnight;\n\n  // load data from the server. (using props.id to identify the post)\n  // (Here'll we'll use setTimeout for demonstration purpose)\n  weatherStation(function(weatherStationData,startDate){\n    apixu(function(apixuData,startDate){\n      darkSky(function(darkSkyData,startDate){\n        apixuData.diff = getDiffVector(weatherStationData,apixuData)\n        darkSkyData.diff = getDiffVector(weatherStationData,darkSkyData)\n        onData(null, {\n          weatherStation: weatherStationData,\n          apixu: apixuData,\n          darkSky: darkSkyData,\n          startDate: moment(startDate).format('YYYY-MM-DD')\n        })\n      },startDate,config);\n    },startDate,config);\n  },startDate,config)\n}\nif(Meteor.isServer){\n  Meteor.methods({\n    getPage(url,options) {\n      return callService(\n        'GET',\n        url,\n        options\n      ).then((result) => result).catch((error) => {\n        throw new Meteor.Error('500', `${error.message}`);\n      });\n    },\n  });\n}\n","export {weatherStation}\nimport moment from 'moment'\nfunction weatherStation(callback,startDate,config){\n  var elasticsearchUrl = config && config.elasticsearchUrl?config.elasticsearchUrl:\"\"\n  var elasticsearchSearchQuery = config && config.elasticsearchSearchQuery?config.elasticsearchSearchQuery:\"\"\n  var brokerUrl = config && config.brokerUrl?config.brokerUrl:\"\"\n  var fiwareServicePath = config && config.fiwareServicePath?config.fiwareServicePath:\"\"\n  var fiwareService = config && config.fiwareService?config.fiwareService:\"\"\n\n  var formatedDate = moment(startDate).format('YYYY-MM-DD')\n  Meteor.call('getPage', elasticsearchUrl + '?q='+elasticsearchSearchQuery+'&sort=time:desc&size=6000&q=time:'+formatedDate,{timeout:15000},function(err,weatherStationData){\n    Meteor.call('getPage',elasticsearchUrl + '?q='+elasticsearchSearchQuery+'&sort=time:desc&size=1',{timeout:15000},function(err,weatherStationDataLast){\n      Meteor.call('getPage',brokerUrl,{\n        headers: {\n            \"Fiware-ServicePath\":fiwareServicePath,\n            \"Fiware-Service\":fiwareService\n          },\n          timeout: 15000\n        },function(err,weatherStationDataCurrent){\n          var WSParsedData = [];\n          var WSCurrentData = {}\n          var d = new Date();\n          d.setHours(0,0,0,0);\n          var midnight = d.getTime();\n          if(weatherStationData && weatherStationData.data && weatherStationData.data.hits && weatherStationData.data.hits.hits && weatherStationData.data.hits.hits.length )\n          {\n            weatherStationData.data.hits.hits.forEach(hit=>{\n              if((new Date(hit._source.time)).getTime()>midnight-3600000 || true){\n                if(hit._source)\n                {\n                  if(hit._source.attribute==\"TP\")\n                  {\n                    WSParsedData.push({\n                      date:(new Date(hit._source.time)).getTime(),\n                      temperature:hit._source.value\n                    })\n                  }\n                  if(hit._source.attribute==\"HD\")\n                  {\n                    WSParsedData.push({\n                      date:(new Date(hit._source.time)).getTime(),\n                      humidity:hit._source.value\n                    })\n                  }\n                }\n              }\n            })\n          }\n          WSParsedData.sort(function(a,b) {return (a.date > b.date) ? 1 : ((b.date > a.date) ? -1 : 0);} );\n          if(weatherStationDataCurrent && weatherStationDataCurrent.data)\n          {\n            var temperature = null;\n            for(var i=WSParsedData.length-1;i>0;i--)\n            {\n              if(WSParsedData[i].temperature){\n                temperature = WSParsedData[i].temperature\n                break;\n              }\n            }\n            var humidity = null;\n            for(var i=WSParsedData.length-1;i>0;i--)\n            {\n              if(WSParsedData[i].humidity){\n                humidity = WSParsedData[i].humidity\n                break;\n              }\n            }\n            if(weatherStationDataCurrent.data.TP){\n              WSCurrentData.temperature = weatherStationDataCurrent.data.TP.value\n              //WSCurrentData.temperature = temperature\n            }\n            if(weatherStationDataCurrent.data.HD){\n              WSCurrentData.humidity = weatherStationDataCurrent.data.HD.value\n              //WSCurrentData.humidity = humidity\n            }\n            var lastDate = null;\n            if(weatherStationDataLast && weatherStationDataLast.data && weatherStationDataLast.data.hits && weatherStationDataLast.data.hits.hits && weatherStationDataLast.data.hits.hits.length){\n              lastDate = weatherStationDataLast.data.hits.hits[0].sort[0]\n            }\n            if(WSParsedData.length){\n              WSCurrentData.date = lastDate\n              //WSCurrentData.date = WSParsedData[WSParsedData.length-1].date\n            }\n\n          }\n          callback({\n            historic: WSParsedData,\n            current: WSCurrentData\n          },startDate);\n      })\n    });\n  })\n}\n","import { Meteor } from 'meteor/meteor';\nimport '../imports/api/data.js'\nMeteor.startup(() => {\n  // code to run on server at startup\n\n});\n"]}